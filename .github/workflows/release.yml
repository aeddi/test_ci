---
name: Release
on:
  push:
    branches:
      - master

jobs:
  tag_branch:
    name: Publish version tag
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2
        with:
            fetch-depth: 5

      - name: Display event
        run:
            git log -n 5; echo; echo;
            cat ${{ github.event_path }}

      - name: Create tmp config file
        run: |
           printf "module.exports = {
               dryRun: true,
               skipTag: true,
               plugins: [
                   '@semantic-release/commit-analyzer',
                   '@semantic-release/release-notes-generator',
                   '@semantic-release/github',
               ],
            };" > .releaserc.js

      - name: Generate Semantic Release version
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish Semantic Release version tag
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: v${{ steps.semantic.outputs.new_release_version }}

#       - name: Retrieve changelog from Github PR body
#         run:
#           cat ${{ github.event_path }}
#           sudo apt-get install jq;
#           cat ${{ github.event_path }} | jq -r .pull_request.body > /tmp/body;
#           cat /tmp/body | sed -ne '/^## Changelog/,$ p' > /tmp/changelog;

#           if [[ -z $(cat /tmp/changelog) ]]; then
#               echo "[Error] empty changelog"; exit 1;
#           fi

#           cat /tmp/changelog | sed '/<!--/,/-->/d' > /tmp/changelog_nc;
#           echo "##[set-env name=CHANGELOG;]$(cat /tmp/changelog_nc)"

#       - name: Create Release
#         uses: actions/create-release@latest
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: v${{ steps.semantic.outputs.new_release_version }}
#           release_name:
#             Release v${{ steps.semantic.outputs.new_release_version }}
#           body: ${{ env.CHANGELOG }}
