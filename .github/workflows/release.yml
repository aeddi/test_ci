---
name: Release
on:
  push:
    branches:
      - master

jobs:
  tag_branch:
    name: Create Github release
    runs-on: macos-latest
    timeout-minutes: 5
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Set GOPATH in env
        run: |
          echo "##[set-env name=GOPATH;]$(go env GOPATH)"
          echo "##[add-path]$(go env GOPATH)/bin"
          mkdir -p $(go env GOPATH)/src/github.com/ipfs-shipyard
          ln -s $PWD $(go env GOPATH)/src/github.com/ipfs-shipyard/gomobile-ipfs
        shell: bash

      - name: Restore Go mod cache
        id: cache
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go/go.sum') }}

      - name: Install Go mod
        if: steps.cache.outputs.cache-hit != 'true'
        working-directory: go
        run: GO111MODULE=on go mod vendor

      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Set TARGET_SDK in env
        run: |
          pip3 install -r packages/utils/yaml_get/requirements.txt
          export GET_BIN=packages/utils/yaml_get/yaml_get.py
          export GET_KEY=global.android.target_sdk_version
          echo "##[set-env name=TARGET_SDK;]$($GET_BIN $GET_KEY)"

      - name: Install Android SDK
        run:
          SDK_MAN=$HOME/Library/Android/sdk/tools/bin/sdkmanager;
          BTOOLS=$($SDK_MAN --list | grep "build-tools;$TARGET_SDK");
          BTOOL=$(echo $BTOOLS | tail -n1 | cut -d'|' -f1 | tr -d ' ');
          PLATFORMS=$($SDK_MAN --list | grep "platforms;android-$TARGET_SDK");
          PLATFORM=$(echo $PLATFORMS | tail -n1 | cut -d'|' -f1 | tr -d ' ');

          $SDK_MAN --install "$BTOOL" platform-tools "$PLATFORM" ndk-bundle
          > /dev/null

      - name: Build Core
        working-directory: packages
        run: make build_core

      - name: Generate docs
        run: |
          gem install jazzy
          rm -rf docs
          cd packages && make docgen

      - name: Create config file
        run: |
           printf "module.exports = {
               plugins: [
                   '@semantic-release/commit-analyzer',
                   '@semantic-release/release-notes-generator',
                   '@semantic-release/github',
                   ['@semantic-release/changelog', {
                       'changelogFile': 'CHANGELOG.md',
                       'changelogTitle': 'Global Changelog',
                   }],
                   ['@semantic-release/git', {
                      'assets': ['CHANGELOG.md', 'docs'],
                      'message': 'docs: add generated docs and changelog'
                   }],
               ],
            };" > .releaserc.js

      - name: Create Semantic Release version
        uses: cycjimmy/semantic-release-action@v2
        with:
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: GitHub Action
          GIT_AUTHOR_EMAIL: action@github.com
          GIT_COMMITTER_NAME: GitHub Action
          GIT_COMMITTER_EMAIL: action@github.com

      # - name: Display Changelog and version
      #   if: steps.semantic.outputs.new_release_published == 'true'
      #   run: |
      #     echo ${{ steps.semantic.outputs.new_release_version }}
          # cat CHANGELOG.md

      # - name: Commit docs and changelog
      #   run: |
      #     git config --local user.email "action@github.com"
      #     git config --local user.name "GitHub Action"
      #     git add CHANGELOG.md
      #     git commit -m "docs: add generated docs and changelog"

      # - name: Push docs and changelog
      #   uses: ad-m/github-push-action@master
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     uses: stefanzweifel/git-auto-commit-action@v4.1.0

      # - name: Generate Semantic Release version
      #   uses: cycjimmy/semantic-release-action@v2
      #   with:
      #     extra_plugins: |
      #       @semantic-release/changelog
      #       @semantic-release/git
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
