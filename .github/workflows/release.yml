---
name: Release
on:
  push:
    branches:
      - master

jobs:
  tag_branch:
    name: Publish version tag
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout changes
        uses: actions/checkout@v2
        with:
          fetch-depth: 5

      - name: Create tmp config file
        run: |
           printf "module.exports = {
               plugins: [
                   '@semantic-release/commit-analyzer',
                   '@semantic-release/release-notes-generator',
                   '@semantic-release/github',
                   ['@semantic-release/changelog', {
                       'changelogFile': 'CHANGELOG.md',
                       'changelogTitle': 'Global Changelog',
                   }],
               ],
            };" > .releaserc.js

      - name: Generate Semantic Release version
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        with:
          extra_plugins: |
            @semantic-release/changelog
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cat changelog
        run: cat CHANGELOG.md

      # - name: Publish Semantic Release version tag
      #   if: steps.semantic.outputs.new_release_published == 'true'
      #   uses: anothrNick/github-tag-action@1.17.2
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     CUSTOM_TAG: v${{ steps.semantic.outputs.new_release_version }}

      # - name: Set MERGE_SHA in env
      #   if: steps.semantic.outputs.new_release_published == 'true'
      #   run: |
      #     export SHA=$(git log --pretty=format:'%p' -1 | tr -d '[:space:]')
      #     echo "##[set-env name=MERGE_SHA;]$SHA"
      #     echo "$SHA"

      # - name: Download changelog artifact
      #   if: steps.semantic.outputs.new_release_published == 'true'
      #   uses: actions/download-artifact@v1
      #   with:
      #     name: changelog-${{ env.MERGE_SHA }}
      #     path: /tmp/changelog_formated

      # - name: Set CHANGELOG in env
      #   run: echo "##[set-env name=CHANGELOG;]$(cat /tmp/changelog_formated)"

      # - name: Create Release
      #   uses: actions/create-release@latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: v${{ steps.semantic.outputs.new_release_version }}
      #     release_name:
      #       Release v${{ steps.semantic.outputs.new_release_version }}
      #     body: ${{ env.CHANGELOG }}
